server:
  port: ${vcap.application.port:8080}
info:
  component: ${spring.application.name}
oauth2AuthServer:  
  path: http://localhost:9999
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false
  
#debug: true

spring:
  aop:
    proxy-target-class: true

security:
  user:
    password: none
  oauth2:
    client:
      accessTokenUri: ${oauth2AuthServer.path}/uaa/oauth/token
      userAuthorizationUri: ${oauth2AuthServer.path}/uaa/oauth/authorize
#      accessTokenUri: http://localhost:9999/uaa/oauth/token
#      userAuthorizationUri: http://localhost:9999/uaa/oauth/authorize
#      accessTokenUri: http://localhost:8080/uaa/oauth/token
#      userAuthorizationUri: http://localhost:8080/uaa/oauth/authorize
      clientId: acme
      clientSecret: acmesecret
    resource:
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
          -----END PUBLIC KEY-----

zuul:
  routes:
    empty_calls:
      path: /**
#      url: http://localhost:9006/oauth2_search
      serviceId: oauth2-search-withsecurity
#      serviceId: oauth2-create-withsecurity
    create_microservice:
      path: /oauth2_create/**
#      url: http://localhost:9005/oauth2_create
      serviceId: oauth2-create-withsecurity
    search_microservice:
      path: /oauth2_search/**
#      url: http://localhost:9006/oauth2_search
      serviceId: oauth2-search-withsecurity
    user:
      path: /user/**
      url: ${oauth2AuthServer.path}/uaa/user
#      url: http://localhost:9999/uaa/user
    authserver:
      path: /uaa/**
      serviceId: authserver
    eureka:
      path: /eureka/**
      url: http://localhost:8761/
    info:
      path: /info/**
      serviceId: oauth2Microservices-edgeserver
    health:
      path: /health/**
      serviceId: oauth2Microservices-edgeserver
    authtest:
      path: /nosecurity/authtest
      url: ${oauth2AuthServer.path}/uaa/authtest
    host:
        connect-timeout-millis: 10000
        socket-timeout-millis: 60000 

logging:
  level:
    org.springframework.security: DEBUG
    com.netflix.discovery.DiscoveryClient: 'INFO'
  file: "logs/${spring.application.name}.log"

#Eureka client configuration

#eureka:
#  client:
#    serviceUrl:
#      defaultZone: ${vcap.services.eureka-service.credentials.uri:http://127.0.0.1:8761}/eureka/

---
spring:
    profiles: docker
information:
    activeprofile: docker
oauth2AuthServer:  
  path: http://172.17.0.1:9999
eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://demodiscovery:8761/eureka/
logging:
    level:
        com.netflix.discovery.DiscoveryClient: 'INFO'
    file: "tmp/logs/${spring.application.name}.log"
security:
  user:
    password: none
  oauth2:
    client:
      accessTokenUri: ${oauth2AuthServer.path}/uaa/oauth/token
      userAuthorizationUri: ${oauth2AuthServer.path}/uaa/oauth/authorize
#      accessTokenUri: http://10.0.2.15:9999/uaa/oauth/token
#      userAuthorizationUri: http://10.0.2.15:9999/uaa/oauth/authorize
      clientId: acme
      clientSecret: acmesecret
    resource:
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
          -----END PUBLIC KEY-----

zuul:
  routes:
    empty_calls:
      path: /**
#      url: http://localhost:9006/oauth2_search
      serviceId: oauth2-search-withsecurity
#      serviceId: oauth2-create-withsecurity
    create_microservice:
      path: /oauth2_create/**
#      url: http://localhost:9005/oauth2_create
      serviceId: oauth2-create-withsecurity
    search_microservice:
      path: /oauth2_search/**
#      url: http://localhost:9006/oauth2_search
      serviceId: oauth2-search-withsecurity
    user:
      path: /user/**
      url: ${oauth2AuthServer.path}/uaa/user
#      url: http://10.0.2.15:9999/uaa/user
    authserver:
      path: /uaa/**
      serviceId: authserver
    eureka:
      path: /eureka/**
      url: http://localhost:8761/
    info:
      path: /info/**
      serviceId: oauth2Microservices-edgeserver
    health:
      path: /health/**
      serviceId: oauth2Microservices-edgeserver
    host:
        connect-timeout-millis: 10000
        socket-timeout-millis: 60000 